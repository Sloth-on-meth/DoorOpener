name: CI
permissions:
  contents: read

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  tests:
    name: Tests (pytest + coverage)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest-cov

      - name: Prepare test config and env
        run: |
          cat > config.ini << 'EOF'
          [HomeAssistant]
          url = http://localhost:8123
          token = dummy_test_token
          switch_entity = switch.test_door

          [pins]
          testuser = 1234

          [admin]
          admin_password = testpass

          [server]
          port = 6532
          test_mode = true

          [security]
          max_attempts = 5
          block_time_minutes = 5
          max_global_attempts_per_hour = 50
          session_max_attempts = 3
          EOF
          
          cat > .env << 'EOF'
          DOOROPENER_PORT=6532
          TZ=UTC
          EOF
          
          mkdir -p tests
          cp config.ini tests/
          cp .env tests/

      - name: Run tests with coverage
        env:
          CONFIG_INI: tests/config.ini
          DOTENV: tests/.env
        run: |
          pytest --maxfail=1 --disable-warnings -q --cov=./ --cov-report=term-missing --cov-fail-under=75

  security:
    name: Security (bandit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Security scan (bandit)
        run: |
          bandit -q -r . -x tests || true

  lint:
    name: Lint (ruff)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run ruff
        run: |
          ruff --version
          ruff check .
